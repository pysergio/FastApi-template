[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    raise NotImplemented

[coverage:run]
source = app
branch = True

[mypy]
plugins = pydantic.mypy

strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
disallow_any_generics = True
check_untyped_defs = True

disallow_untyped_defs = True
mypy_path = .

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True

[mypy-loguru]
ignore_missing_imports = True

[mypy-app.*]
ignore_missing_imports = True

[flake8]
format = wemake
max-line-length = 120

per-file-ignores =
    # allow names like value/values
    app/models/wether.py: WPS110,
ignore =
    # common errors:
    # Allow to write dict as literal
    C408
    # Allow `f` string
    WPS305
    # Docstring is not mandatory
    D100, D101, D102, D103, D104
    # FastAPI architecture requires a lot of functions calls as default arguments, so ignore it here.
    B008,
    # docs are missing in this project.
    D, RST
    # pydantic validator first argument issue
    N805

    # WPS: 3xx
    # IMO, but the obligation to specify the base class is redundant.
    WPS306,
    # allow walrus operator
    WPS332,

    # WPS: 4xx
    # FastAPI architecture requires a lot of complex calls as default arguments, so ignore it here.
    WPS404,
    # again, FastAPI DI architecture involves a lot of nested functions as DI providers.
    WPS430,
    WPS432,

    # WPS: 6xx
    # pydantic defines models in dataclasses model style, but not supported by WPS.
    WPS601,
    # async magic method usage: __call__
    WPS610,
no-accept-encodings = True
nested-classes-whitelist=Config
inline-quotes = double
